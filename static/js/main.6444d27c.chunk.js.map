{"version":3,"sources":["Components/NavBar/index.js","Components/NavBar/NavBar.jsx","Components/Pages/Home/index.js","Components/Pages/Home/Home.jsx","Components/Utility/Section.js","Components/DataFetches/shared/API.jsx","Components/DataFetches/DataHeading/index.js","Components/DataFetches/DataHeading/DataHeading.jsx","Components/DataFetches/shared/GetColumns.jsx","Components/DataFetches/shared/DataTable.jsx","Components/DataFetches/CountriesDataTable/index.js","Components/DataFetches/CountriesDataTable/CountriesDataTable.jsx","Components/DataFetches/StatesDataTable/index.js","Components/DataFetches/StatesDataTable/StatesDataTable.jsx","Components/Pages/Data/index.js","Components/Pages/Data/Data.jsx","mocksData/FoodMockData.jsx","Components/Custom/FoodCards/FoodCard.jsx","Components/Custom/FoodCards/FoodCardContent.jsx","Components/Custom/FoodCards/FoodCardDescription.jsx","Components/Pages/OrderFood/index.js","Components/Pages/OrderFood/OrderFood.jsx","mocksData/NewsMockData.jsx","Components/Custom/NewsCards/NewsCard.jsx","Components/Custom/NewsCards/NewsCardContext.jsx","Components/Custom/NewsCards/NewsCardDescription.jsx","Components/Pages/News/index.js","Components/Pages/News/News.jsx","Components/Custom/SupportForm/SupportFormHeadline.jsx","Components/Pages/Support/index.js","Components/Pages/Support/Support.jsx","App.js","serviceWorker.js","index.js"],"names":["NavBar","useState","menuIsDisplayed","setMenuIsDisplayed","className","role","aria-label","to","onClick","Home","Section","children","name","elbowRoom","Box","tag","pad","vertical","horizontal","Heading","level","margin","top","alignSelf","endpoints","apiFetch","args","a","url","URL","params","Object","entries","length","keys","forEach","key","searchParams","append","fetch","toString","then","res","json","fetchAll","fetchCountries","fetchStates","DataHeading","fadeIn","setFadeIn","useQuery","data","useEffect","timer","setTimeout","clearTimeout","size","React","useContext","ResponsiveContext","cases","style","color","recovered","deaths","WorldMap","getColumns","location","columns","property","header","render","datum","Meter","values","value","caseRatio","thickness","deathRatio","DataTable","caseTotal","deathTotal","DataArr","setDataArr","nArr","map","numbers","align","CountriesDataTable","status","error","message","StatesDataTable","Data","image","category","hours","phone","description","Card","business","rest","width","round","elevation","overflow","height","Image","src","fit","CardContent","direction","justify","Text","background","CardDescription","left","truncate","OrderFood","Consumer","Grid","count","gap","FoodCard","FoodCardContent","FoodCardDescription","headline","NewsCard","NewsCardContent","NewsCardDescription","News","SupportFormHeading","Paragraph","textAlign","Support","App","path","exact","component","Boolean","window","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.6444d27c.chunk.js","sourcesContent":["import NavBar from \"./NavBar\";\nexport default NavBar;\n","import React, { useState } from \"react\";\n\nimport { Link } from \"react-router-dom\";\n\nconst NavBar = () => {\n  const [menuIsDisplayed, setMenuIsDisplayed] = useState(false);\n  return (\n    <nav\n      className=\"navbar has-shadow is-dark\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"navbar-brand\">\n        <Link to=\"/\" className=\"navbar-item\">\n          <h1>COVID-404</h1>\n        </Link>\n\n        <div\n          className={`navbar-burger ${menuIsDisplayed ? \"is-active\" : \"\"}`}\n          onClick={() => setMenuIsDisplayed(!menuIsDisplayed)}\n        >\n          <span />\n          <span />\n          <span />\n        </div>\n      </div>\n      <div className={`navbar-menu ${menuIsDisplayed ? \"is-active\" : \"\"}`}>\n        <div className=\"navbar-end\">\n          <Link to=\"/Data\" className=\"navbar-item\">\n            Data\n          </Link>\n          <Link to=\"/OrderFood\" className=\"navbar-item\">\n            Order Food\n          </Link>\n          <Link to=\"/News\" className=\"navbar-item\">\n            News\n          </Link>\n          <Link to=\"Support\" className=\"navbar-item\">\n            Support\n          </Link>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default NavBar;\n","import Home from \"./Home\";\nexport default Home;\n","import React from \"react\";\n\nconst Home = () => {\n  return <h1>Home Page</h1>;\n};\n\nexport default Home;\n","import React from \"react\";\nimport { Heading, Box } from \"grommet\";\n\nconst Section = ({ children, name, elbowRoom = \"medium\" }) => (\n  <Box tag=\"section\" pad={{ vertical: elbowRoom, horizontal: elbowRoom }}>\n    <Heading level={2} margin={{ top: \"none\" }} alignSelf=\"center\">\n      {name}\n    </Heading>\n    {children}\n  </Box>\n);\n\nexport default Section;\n","const endpoints = {\n  all: \"https://corona.lmao.ninja/all\",\n  countries: \"https://corona.lmao.ninja/countries\",\n  states: \"https://corona.lmao.ninja/states\"\n};\n\nexport const apiFetch = async args => {\n  const url = new URL(args.url);\n  if (args.params && Object.entries(args.params).length !== 0) {\n    Object.keys(args.params).forEach(key =>\n      url.searchParams.append(key, args.params[key])\n    );\n  }\n\n  return fetch(url.toString(), { ...args }).then(res => res.json());\n};\n\nexport const fetchAll = () => apiFetch({ url: endpoints.all });\n\nexport const fetchCountries = () =>\n  apiFetch({\n    url: endpoints.countries\n  });\n\nexport const fetchStates = () =>\n  apiFetch({\n    url: endpoints.states\n  });\n","import DataHeading from \"./DataHeading\";\nexport default DataHeading;\n","import React, { useState, useEffect } from \"react\";\nimport { WorldMap, ResponsiveContext } from \"grommet\";\nimport Section from \"../../Utility/Section\";\nimport { useQuery } from \"react-query\";\nimport { fetchAll } from \"../shared/API\";\n\nconst DataHeading = () => {\n  const [fadeIn, setFadeIn] = useState(false);\n  const { data = \"\" } = useQuery(\"fetch-all-cases\", fetchAll);\n\n  useEffect(() => {\n    let timer = setTimeout(() => setFadeIn(true), 3500);\n    return () => {\n      clearTimeout(timer);\n    };\n  }, []);\n\n  const size = React.useContext(ResponsiveContext);\n\n  return (\n    <Section>\n      <div>\n        <h1 className=\"title is-1\">\n          {fadeIn && data ? data.cases : \"Too Many\"} <span>Cases</span>\n        </h1>\n        <h1 className=\"title is-2\" style={{ color: \"green\" }}>\n          {fadeIn && data ? data.recovered : \"Not Enough\"}\n          <span> Recovered</span>\n        </h1>\n        <h1 className=\"title is-3\" style={{ color: \"grey\" }}>\n          {fadeIn && data ? data.deaths : \"Too Many\"} <span>Deaths</span>\n        </h1>\n      </div>\n      <div>\n        {size === \"small\" || <WorldMap color={fadeIn && data ? \"red\" : \"\"} />}\n      </div>\n    </Section>\n  );\n};\n\nexport default DataHeading;\n","import React from \"react\";\nimport { Box, Meter } from \"grommet\";\n\nconst getColumns = location => {\n  const columns = [\n    {\n      property: location,\n      header: \"Location\"\n    },\n    {\n      property: \"cases\",\n      header: \"Cases\",\n      render: datum => (\n        <Box pad={{ vertical: \"xsmall\" }}>\n          <Meter\n            values={[{ value: datum.caseRatio }]}\n            thickness=\"small\"\n            size=\"small\"\n          />\n        </Box>\n      )\n    },\n    {\n      property: \"deaths\",\n      header: \"Deaths\",\n      render: datum => (\n        <Box pad={{ vertical: \"xsmall\" }}>\n          <Meter\n            values={[{ value: datum.deathRatio }]}\n            thickness=\"small\"\n            size=\"small\"\n          />\n        </Box>\n      )\n    }\n  ];\n\n  return { columns };\n};\n\nexport default getColumns;\n","import React, { useState, useEffect } from \"react\";\nimport { Box, DataTable as GrommetDataTable } from \"grommet\";\nimport getColumns from \"./GetColumns\";\n\nconst DataTable = ({ data, location, caseTotal, deathTotal }) => {\n  const [DataArr, setDataArr] = useState([]);\n  const { columns } = getColumns(location);\n\n  const nArr = data.map(numbers => ({\n    ...numbers,\n    location,\n    caseRatio: (numbers.cases / caseTotal) * 100,\n    deathRatio: (numbers.deaths / deathTotal) * 100\n  }));\n\n  useEffect(() => {\n    setDataArr(nArr);\n  }, [data]);\n\n  return (\n    <Box align=\"center\" pad=\"large\">\n      <GrommetDataTable columns={columns} data={DataArr} size=\"medium\" />\n    </Box>\n  );\n};\n\nexport default DataTable;\n","import CountriesDataTable from \"./CountriesDataTable\";\nexport default CountriesDataTable;\n","import React from \"react\";\nimport { Heading } from \"grommet\";\nimport { useQuery } from \"react-query\";\n\nimport { fetchCountries } from \"../shared/API\";\nimport Section from \"../../Utility/Section\";\nimport DataTable from \"../shared/DataTable\";\n\nconst CountriesDataTable = () => {\n  const { status, data, error } = useQuery(\n    \"all-countries-data\",\n    fetchCountries\n  );\n\n  return (\n    <Section>\n      <Heading alignSelf=\"center\">World Wide</Heading>\n      {status === \"loading\" ? (\n        <h1>Is Loading...</h1>\n      ) : status === \"error\" ? (\n        <span>Error: {error.message}</span>\n      ) : (\n        <DataTable\n          location=\"country\"\n          data={data}\n          caseTotal={378547}\n          deathTotal={16505}\n        />\n      )}\n    </Section>\n  );\n};\n\nexport default CountriesDataTable;\n","import StatesDataTable from \"./StatesDataTable\";\nexport default StatesDataTable;\n","import React from \"react\";\nimport { Heading } from \"grommet\";\nimport { useQuery } from \"react-query\";\n\nimport { fetchStates } from \"../shared/API\";\nimport Section from \"../../Utility/Section\";\nimport DataTable from \"../shared/DataTable\";\n\nconst StatesDataTable = () => {\n  const { status, data, error } = useQuery(\"all-states-data\", fetchStates);\n\n  return (\n    <Section>\n      <Heading alignSelf=\"center\">United States</Heading>\n      {status === \"loading\" ? (\n        <h1>Is Loading...</h1>\n      ) : status === \"error\" ? (\n        <span>Error: {error.message}</span>\n      ) : (\n        <DataTable\n          location=\"state\"\n          data={data}\n          caseTotal={46145}\n          deathTotal={582}\n        />\n      )}\n    </Section>\n  );\n};\n\nexport default StatesDataTable;\n","import Data from \"./Data\";\nexport default Data;\n","import React from \"react\";\nimport { Box } from \"grommet\";\nimport DataHeading from \"../../DataFetches/DataHeading\";\nimport CountriesDataTable from \"../../DataFetches/CountriesDataTable\";\nimport StatesDataTable from \"../../DataFetches/StatesDataTable\";\n\nexport default () => {\n  return (\n    <Box align=\"center\" margin=\"large\">\n      <DataHeading />\n      <CountriesDataTable />\n      <StatesDataTable />\n    </Box>\n  );\n};\n","const data = [\n  {\n    name: \"Wise Bar&Grill\",\n    image:\n      \"https://cdn.businessyab.com/assets/uploads/eb93b7dd39a7bbe3e9b3c7a9826d7e95_-united-states-new-york-kings-county-brooklyn-sheepshead-bay-neptune-avenue-35-wise-bargrill-718-551-5588.jpg\",\n    category: \"Mixed\",\n    hours: \"10:00am - 3:00am\",\n    phone: \"(123) 456-7890\",\n    description: \"Best Restaurant. Periodt\"\n  },\n  {\n    name: \"Louis Pizza\",\n    image:\n      \"https://lh3.googleusercontent.com/proxy/u-lDkbVApgXjXP4ebNyfB39V-f-SwZETEwGoE1nqb2BmjDK9bWH4VqvjozBu0GQXq-il3z9IrYQGc_xMcs9OUOuy2vG4MLu1AQ\",\n    category: \"Italian\",\n    hours: \"7:00am - 9:00pm\",\n    phone: \"(123) 456-7890\",\n    description: \"Pizza for everyone\"\n  },\n  {\n    name: \"Mother Russia\",\n    image:\n      \"https://www.manhattanbride.com/wp-content/uploads/2014/07/01-GL5Y8012.jpg\",\n    category: \"Russian\",\n    hours: \"7:00am - 9:00pm\",\n    phone: \"(123) 456-7890\",\n    description: \"TASTE THIS VODKA AND SOME PICKLES\"\n  },\n  {\n    name: \"Prince of Persia\",\n    image:\n      \"https://www.persiansarenotarabs.com/wp-content/uploads/2019/04/food-banner-1.jpg\",\n    category: \"Mediterranean\",\n    hours: \"7:00am - 9:00pm\",\n    phone: \"(123) 456-7890\",\n    description: \"Best Persian Food around\"\n  },\n  {\n    name: \"Wise Bar&Grill\",\n    image:\n      \"https://cdn.businessyab.com/assets/uploads/eb93b7dd39a7bbe3e9b3c7a9826d7e95_-united-states-new-york-kings-county-brooklyn-sheepshead-bay-neptune-avenue-35-wise-bargrill-718-551-5588.jpg\",\n    category: \"Mixed\",\n    hours: \"10:00am - 3:00am\",\n    phone: \"(123) 456-7890\",\n    description: \"Best Restaurant. Periodt\"\n  },\n  {\n    name: \"Louis Pizza\",\n    image:\n      \"https://lh3.googleusercontent.com/proxy/u-lDkbVApgXjXP4ebNyfB39V-f-SwZETEwGoE1nqb2BmjDK9bWH4VqvjozBu0GQXq-il3z9IrYQGc_xMcs9OUOuy2vG4MLu1AQ\",\n    category: \"Italian\",\n    hours: \"7:00am - 9:00pm\",\n    phone: \"(123) 456-7890\",\n    description: \"Pizza for everyone\"\n  },\n  {\n    name: \"Mother Russia\",\n    image:\n      \"https://www.manhattanbride.com/wp-content/uploads/2014/07/01-GL5Y8012.jpg\",\n    category: \"Russian\",\n    hours: \"7:00am - 9:00pm\",\n    phone: \"(123) 456-7890\",\n    description: \"TASTE THIS VODKA AND SOME PICKLES\"\n  },\n  {\n    name: \"Prince of Persia\",\n    image:\n      \"https://www.persiansarenotarabs.com/wp-content/uploads/2019/04/food-banner-1.jpg\",\n    category: \"Mediterranean\",\n    hours: \"7:00am - 9:00pm\",\n    phone: \"(123) 456-7890\",\n    description: \"Best Persian Food around\"\n  }\n];\n\nexport default data;\n","import React from \"react\";\nimport { Box, Image } from \"grommet\";\n\nconst Card = ({ business = {}, children, ...rest }) => (\n  <Box\n    width=\"xlarge\"\n    round=\"small\"\n    elevation=\"small\"\n    overflow=\"hidden\"\n    {...rest}\n  >\n    <Box height=\"medium\">\n      <Image src={business.image} fit=\"cover\" />\n    </Box>\n\n    {children}\n  </Box>\n);\n\nexport default Card;\n","import React from \"react\";\nimport { Box, Heading, Text } from \"grommet\";\n\nconst CardContent = ({ name, category, hours, phone, children }) => {\n  return (\n    <Box pad={{ horizontal: \"small\" }}>\n      <Box\n        margin={{ top: \"small\" }}\n        direction=\"row\"\n        align=\"start\"\n        justify=\"between\"\n      >\n        <Box align=\"start\">\n          <Heading level=\"3\" margin=\"none\">\n            {name}\n          </Heading>\n          <Text color=\"dark-1\" size=\"xlarge\">\n            &#8226; {category}\n          </Text>\n          <Text color=\"dark-1\" size=\"medium\">\n            &#8226; {phone}\n          </Text>\n          <Text color=\"dark-1\" size=\"xlarge\">\n            &#8226; {hours}\n          </Text>\n        </Box>\n        <Box\n          round=\"xsmall\"\n          pad={{ vertical: \"xxsmall\", horizontal: \"medium\" }}\n          background={\"dark-2\"}\n        >\n          <Text size=\"xsmall\">NEW</Text>\n        </Box>\n      </Box>\n      {children}\n    </Box>\n  );\n};\n\nexport default CardContent;\n","import React from \"react\";\nimport { Box, Text } from \"grommet\";\n\nconst CardDescription = ({ description }) => (\n  <Box\n    tag=\"description\"\n    direction=\"row\"\n    align=\"center\"\n    justify=\"between\"\n    pad={{ left: \"small\", vertical: \"small\" }}\n  >\n    <Text size=\"mediu\" color=\"dark-1\" margin={{ vertical: \"small\" }} truncate>\n      {description}\n    </Text>\n  </Box>\n);\n\nexport default CardDescription;\n","import OrderFood from \"./OrderFood\";\nexport default OrderFood;\n","import React, { Fragment } from \"react\";\nimport { Box, Grid, ResponsiveContext } from \"grommet\";\nimport data from \"../../../mocksData/FoodMockData\";\nimport FoodCard from \"../../Custom/FoodCards/FoodCard\";\nimport FoodCardContent from \"../../Custom/FoodCards/FoodCardContent\";\nimport FoodCardDescription from \"../../Custom/FoodCards/FoodCardDescription\";\n\nconst OrderFood = () => {\n  return (\n    <Fragment>\n      <ResponsiveContext.Consumer>\n        {size => (\n          <Grid\n            align=\"start\"\n            columns={size !== \"small\" && { count: \"fill\", size: \"medium\" }}\n            gap=\"small\"\n          >\n            {Object.entries(data).map(([_, business]) => (\n              <Box align=\"center\" margin=\"large\">\n                <FoodCard key={business.key} business={business}>\n                  <FoodCardContent\n                    category={business.category}\n                    hours={business.hours}\n                    phone={business.phone}\n                    name={business.name}\n                  >\n                    <FoodCardDescription description={business.description} />\n                  </FoodCardContent>\n                </FoodCard>\n              </Box>\n            ))}\n          </Grid>\n        )}\n      </ResponsiveContext.Consumer>\n    </Fragment>\n  );\n};\n\nexport default OrderFood;\n","const data = [\n  {\n    headline: \"Recovery rates are increating\",\n    image:\n      \"https://i0.wp.com/www.westernslopenow.com/wp-content/uploads/sites/95/2020/03/thumbnail_Coronavirus-Update-1-2-2-2-1.jpg?resize=2560%2C1440&ssl=1\",\n    hours: \"Future\",\n    description:\n      \"There is still hope. People are recovering from COVID-19. Hospitals are finding new cures to virus to stop the spread\"\n  },\n  {\n    headline: \"More Deaths due to COVID-19\",\n    image:\n      \"https://i.insider.com/5e7b9d02671de045bd740dee?width=1100&format=jpeg&auto=webp\",\n    hours: \"8:00 A.M EST\",\n    description:\n      \"More than 100 people were the victims of the virus in 24 hours\"\n  },\n\n  {\n    headline: \"COVID-19 Attacks NYC\",\n    image:\n      \"https://s.abcnews.com/images/International/coronavirus-11-new-york-city-ap-jc-200325_hpMain_16x9_992.jpg\",\n    hours: \"Yesteday\",\n    description:\n      \"Big incident was found in New York City. A woman traveling from overseas was found infected by the virus and now the whole city is endangered\"\n  },\n  {\n    headline: \"China announces the new danger is coming\",\n    image:\n      \"https://lh3.googleusercontent.com/proxy/b8HiNSZDy9MCCQk0KkLYBrTqnfWc7Uo0mR_HPK8jSM5V_-MeGjxO52JN7LDNwsFRQrDRMgyzIvl94fl0yH0UnItBRaYPW_tx9sUMHJS_dmQ5Au3pN2l_92uPBBlqfO0tpg\",\n    hours: \"A Week Ago\",\n    description:\n      \"A big virus hits China. It is spreading at a rapid speed. Other countries could be in danger also.\"\n  }\n];\n\nexport default data;\n","import React from \"react\";\nimport { Box, Image } from \"grommet\";\n\nconst NewsCard = ({ business = {}, children, ...rest }) => (\n  <Box\n    width=\"xlarge\"\n    round=\"small\"\n    elevation=\"small\"\n    overflow=\"hidden\"\n    {...rest}\n  >\n    <Box height=\"medium\">\n      <Image src={business.image} fit=\"cover\" />\n    </Box>\n    {children}\n  </Box>\n);\n\nexport default NewsCard;\n","import React from \"react\";\nimport { Box, Heading, Text } from \"grommet\";\n\nconst NewsCardContent = ({ headline, hours, children }) => {\n  return (\n    <Box pad={{ horizontal: \"small\" }}>\n      <Box\n        margin={{ top: \"small\" }}\n        direction=\"row\"\n        align=\"center\"\n        justify=\"between\"\n      >\n        <Box>\n          <Heading level=\"3\" margin=\"none\">\n            {headline}\n          </Heading>\n          <Text color=\"dark-1\" size=\"xlarge\">\n            &#8226; {hours}\n          </Text>\n        </Box>\n      </Box>\n      {children}\n    </Box>\n  );\n};\n\nexport default NewsCardContent;\n","import React from \"react\";\nimport { Box, Text } from \"grommet\";\n\nconst NewsCardDescription = ({ description }) => (\n  <Box\n    tag=\"description\"\n    direction=\"row\"\n    align=\"start\"\n    justify=\"between\"\n    pad={{ left: \"small\", vertical: \"small\" }}\n  >\n    <Text size=\"large\" color=\"dark-1\" margin={{ vertical: \"small\" }}>\n      {description}\n    </Text>\n  </Box>\n);\n\nexport default NewsCardDescription;\n","import News from \"./News\";\nexport default News;\n","import React, { Fragment } from \"react\";\nimport { Box, Grid, ResponsiveContext } from \"grommet\";\nimport data from \"../../../mocksData/NewsMockData\";\nimport NewsCard from \"../../Custom/NewsCards/NewsCard\";\nimport NewsCardContent from \"../../Custom/NewsCards/NewsCardContext\";\nimport NewsCardDescription from \"../../Custom/NewsCards/NewsCardDescription\";\n\nconst News = () => {\n  return (\n    <Fragment>\n      <div>\n        {\n          <Grid align=\"center\" columns={{ count: \"fit\" }} gap=\"large\">\n            {Object.entries(data).map(([_, business]) => (\n              <Box align=\"center\" margin=\"large\">\n                <NewsCard key={business.key} business={business}>\n                  <NewsCardContent hours={business.hours} name={business.name}>\n                    <NewsCardDescription description={business.description} />\n                  </NewsCardContent>\n                </NewsCard>\n              </Box>\n            ))}\n          </Grid>\n        }\n      </div>\n    </Fragment>\n  );\n};\nexport default News;\n","import React, { Fragment } from \"react\";\nimport { Box, Paragraph } from \"grommet\";\n\nconst SupportFormHeading = ({ size, ...rest }) => {\n  return (\n    <Fragment>\n      <Box direction=\"row\" {...rest}>\n        <h1>STAY HOME PLEASE</h1>\n      </Box>\n      <Paragraph margin={{ top: \"none\" }} textAlign=\"center\" size=\"xxlarge\">\n        check here for any local <b>Covid-19</b> news.\n      </Paragraph>\n    </Fragment>\n  );\n};\nexport default SupportFormHeading;\n","import Support from \"./Support\";\nexport default Support;\n","import React from \"react\";\nimport { Box } from \"grommet\";\nimport FormMain from \"../../Custom/SupportForm/SupportForm\";\nimport SupportFormHeading from \"../../Custom/SupportForm/SupportFormHeadline\";\nimport Section from \"../../Utility/Section\";\n\nconst Support = () => {\n  return (\n    <Box align=\"center\" margin=\"large\">\n      <SupportFormHeading size=\"xlarge\" />\n      <Section></Section>\n    </Box>\n  );\n};\n\nexport default Support;\n","import React from \"react\";\nimport NavBar from \"./Components/NavBar\";\n\nimport Home from \"./Components/Pages/Home\";\nimport Data from \"./Components/Pages/Data\";\nimport OrderFood from \"./Components/Pages/OrderFood\";\nimport News from \"./Components/Pages/News\";\nimport Support from \"./Components/Pages/Support\";\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport \"./App.css\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Router>\n        <NavBar />\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/Data\" component={Data} />\n          <Route path=\"/OrderFood\" component={OrderFood} />\n          <Route path=\"/News\" component={News} />\n          <Route path=\"/Support\" component={Support} />\n        </Switch>\n      </Router>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}